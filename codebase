<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>The PocketFlow Ecosystem: A Visual Analysis</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;900&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f0f4f8;
        }
        .chart-container {
            position: relative;
            width: 100%;
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
            height: 350px;
            max-height: 400px;
        }
        @media (min-width: 768px) {
            .chart-container {
                height: 400px;
            }
        }
        .kpi-card {
            background-color: #0047FF;
            color: white;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .kpi-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 71, 255, 0.2);
        }
        .flow-arrow {
            position: relative;
            width: 100%;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .flow-arrow::after {
            content: 'â†“';
            font-size: 2.5rem;
            color: #00D1FF;
            animation: bounce 2s infinite;
        }
        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% {
                transform: translateY(0);
            }
            40% {
                transform: translateY(-15px);
            }
            60% {
                transform: translateY(-7px);
            }
        }
        .timeline-item::before {
            content: '';
            position: absolute;
            left: -30px;
            top: 50%;
            transform: translateY(-50%);
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background-color: #FF007A;
            border: 4px solid #f0f4f8;
        }
        .timeline-line {
            position: absolute;
            left: -21px;
            top: 0;
            bottom: 0;
            width: 2px;
            background-color: #00D1FF;
        }
    </style>
</head>
<body class="text-gray-800">

    <header class="bg-white shadow-md p-8 text-center">
        <h1 class="text-4xl md:text-5xl font-black text-gray-900">The <span style="color: #0047FF;">PocketFlow</span> Ecosystem</h1>
        <p class="mt-4 text-lg text-gray-600 max-w-3xl mx-auto">A visual analysis of the minimalist LLM framework that champions developer control, architectural purity, and the "Agentic Coding" paradigm.</p>
    </header>

    <main class="container mx-auto p-4 md:p-8">

        <section id="minimalism" class="my-12">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-8 items-center">
                <div class="bg-white rounded-lg shadow-lg p-6 md:p-8">
                    <h2 class="text-3xl font-bold mb-4 text-gray-900">The Minimalist Thesis</h2>
                    <p class="text-gray-600 mb-6">PocketFlow was born as a direct reaction to "bloated" frameworks like LangChain. Its core philosophy is to strip away everything unnecessary, offering a pure, transparent, and powerful alternative for developers who demand control.</p>
                    <div class="grid grid-cols-1 sm:grid-cols-3 gap-4 text-center">
                        <div class="kpi-card rounded-lg p-4">
                            <div class="text-4xl font-extrabold">~100</div>
                            <div class="text-sm font-semibold">Lines of Code</div>
                        </div>
                        <div class="kpi-card rounded-lg p-4">
                            <div class="text-4xl font-extrabold">Zero</div>
                            <div class="text-sm font-semibold">Dependencies</div>
                        </div>
                        <div class="kpi-card rounded-lg p-4">
                            <div class="text-4xl font-extrabold">Zero</div>
                            <div class="text-sm font-semibold">Vendor Lock-In</div>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow-lg p-6 md:p-8">
                    <h3 class="text-2xl font-bold text-center mb-4">Framework Size Comparison</h3>
                    <p class="text-center text-gray-600 mb-4">The difference in scale is staggering. PocketFlow's tiny footprint contrasts sharply with the massive codebases of incumbent frameworks.</p>
                    <div class="chart-container h-64 md:h-auto">
                        <canvas id="sizeComparisonChart"></canvas>
                    </div>
                </div>
            </div>
        </section>

        <section id="architecture" class="my-12 bg-white rounded-lg shadow-lg p-6 md:p-8">
            <h2 class="text-3xl font-bold text-center mb-2 text-gray-900">Core Architecture: "Graph + Shared Store"</h2>
            <p class="text-center text-gray-600 max-w-3xl mx-auto mb-8">The entire framework is a pure implementation of a classic data-flow pattern. Nodes perform tasks, a Flow directs the sequence, and a Shared Store passes data between them. This elegant model can represent everything from simple chains to complex, multi-agent systems.</p>
            <div class="flex flex-col md:flex-row justify-around items-center text-center gap-4">
                <div class="w-full md:w-1/4 p-4 rounded-lg border-2 border-dashed border-gray-300">
                    <h4 class="text-xl font-bold" style="color: #0047FF;">1. Shared Context</h4>
                    <p class="text-sm text-gray-600">A simple dictionary acting as a global state. The "countertop" holding all data and results.</p>
                </div>
                <div class="flow-arrow hidden md:block md:w-auto"></div>
                <div class="w-full md:w-1/2 p-4 rounded-lg bg-gray-50 border-2 border-gray-200">
                    <h4 class="text-xl font-bold" style="color: #FF007A;">2. Node (Unit of Work)</h4>
                    <div class="flex flex-col sm:flex-row justify-around mt-2 gap-2">
                        <div class="flex-1 bg-white p-2 rounded shadow-sm"><b>Prep:</b> Get data</div>
                        <div class="flex-1 bg-white p-2 rounded shadow-sm"><b>Exec:</b> Perform task</div>
                        <div class="flex-1 bg-white p-2 rounded shadow-sm"><b>Post:</b> Update context & decide next action</div>
                    </div>
                </div>
                <div class="flow-arrow hidden md:block md:w-auto"></div>
                <div class="w-full md:w-1/4 p-4 rounded-lg border-2 border-dashed border-gray-300">
                     <h4 class="text-xl font-bold" style="color: #00D1FF;">3. Flow (Orchestrator)</h4>
                    <p class="text-sm text-gray-600">The "recipe" that connects Nodes into a directed graph, enabling conditional logic and loops.</p>
                </div>
            </div>
        </section>

        <section id="ecosystem" class="my-12">
             <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                <div class="bg-white rounded-lg shadow-lg p-6 md:p-8">
                    <h3 class="text-2xl font-bold text-center mb-4">A Polyglot Framework</h3>
                    <p class="text-center text-gray-600 mb-4">While Python is the flagship, the PocketFlow pattern is expanding. Ports to other languages demonstrate a commitment to making this minimalist approach accessible to all developers.</p>
                    <div class="chart-container">
                        <canvas id="languagePopularityChart"></canvas>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow-lg p-6 md:p-8">
                    <h3 class="text-2xl font-bold text-center mb-4">Flagship Application: Codebase to Tutorial</h3>
                     <p class="text-center text-gray-600 mb-4">The most popular project in the ecosystem, with over <span class="font-bold" style="color:#FF007A;">11,000+ stars</span>, is an AI agent that automatically generates comprehensive tutorials from any GitHub repository.</p>
                    <div class="space-y-4 mt-6">
                        <div class="p-4 bg-blue-50 rounded-lg text-center">
                            <span class="font-bold text-lg" style="color:#0047FF;">Step 1: Crawl & Filter</span>
                            <p class="text-sm text-gray-600">Agent ingests the target repository source code.</p>
                        </div>
                        <div class="flow-arrow h-10"></div>
                        <div class="p-4 bg-pink-50 rounded-lg text-center">
                            <span class="font-bold text-lg" style="color:#FF007A;">Step 2: Analyze & Build Knowledge</span>
                            <p class="text-sm text-gray-600">Identifies core abstractions and dependencies.</p>
                        </div>
                        <div class="flow-arrow h-10"></div>
                        <div class="p-4 bg-cyan-50 rounded-lg text-center">
                            <span class="font-bold text-lg" style="color:#00D1FF;">Step 3: Generate Tutorial</span>
                            <p class="text-sm text-gray-600">Produces a multi-chapter guide with explanations.</p>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <section id="comparison" class="my-12 bg-white rounded-lg shadow-lg p-6 md:p-8">
            <h2 class="text-3xl font-bold text-center mb-2 text-gray-900">The Competitive Landscape</h2>
            <p class="text-center text-gray-600 max-w-3xl mx-auto mb-8">PocketFlow's minimalism is its key differentiator. This chart compares the approximate lines of code, illustrating the architectural chasm between it and other popular frameworks.</p>
            <div class="chart-container">
                <canvas id="locComparisonChart"></canvas>
            </div>
        </section>
        
        <section id="health" class="my-12">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                <div class="bg-white rounded-lg shadow-lg p-6 md:p-8">
                    <h3 class="text-2xl font-bold text-center mb-4">Project Health & Community Dynamics</h3>
                    <p class="text-center text-gray-600 mb-4">The project shows strong community interest but also reveals the characteristics of a founder-led initiative. The "hub-and-spoke" model shows high creator influence and a critical gap in built-in observability tools.</p>
                    <div class="chart-container">
                        <canvas id="projectHealthChart"></canvas>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow-lg p-6 md:p-8">
                    <h3 class="text-2xl font-bold text-center mb-4">The Pivot to Commercialization</h3>
                    <p class="text-center text-gray-600 mb-4">The open-source project's success has led to the creation of Osly.ai, a commercial startup. This classic "Open-Core" strategy provides a no-code platform for non-technical users, built on the same minimalist principles.</p>
                    <div class="relative pl-8 mt-6">
                        <div class="timeline-line"></div>
                        <div class="relative mb-8 timeline-item">
                            <h4 class="font-bold text-lg">2024: PocketFlow OS Launch</h4>
                            <p class="text-sm text-gray-600">The 100-line Python framework is released, gaining rapid traction on GitHub.</p>
                        </div>
                         <div class="relative mb-8 timeline-item">
                            <h4 class="font-bold text-lg">Early 2025: The-Pocket-World Emerges</h4>
                            <p class="text-sm text-gray-600">A new GitHub org appears with a TypeScript version of the framework, signaling a new direction.</p>
                        </div>
                        <div class="relative timeline-item">
                            <h4 class="font-bold text-lg">Mid 2025: Osly.ai Founded</h4>
                            <p class="text-sm text-gray-600">The commercial entity is announced, raising a seed round to build a no-code workflow generator.</p>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <footer class="text-center p-8 mt-12 bg-gray-800 text-white">
        <p>Infographic generated based on a detailed analysis of the The-Pocket GitHub organization and its ecosystem.</p>
        <p class="text-sm text-gray-400 mt-2">Visualization Libraries: Chart.js & Tailwind CSS. No SVG or Mermaid JS used.</p>
    </footer>

    <script>
        const energeticPalette = {
            blue: '#0047FF',
            brightBlue: '#00D1FF',
            pink: '#FF007A',
            yellow: '#FFE600',
            gray: '#4b5563'
        };

        function wrapLabel(str, maxWidth) {
            if (str.length <= maxWidth) {
                return str;
            }
            const words = str.split(' ');
            const lines = [];
            let currentLine = '';
            for (const word of words) {
                if ((currentLine + word).length > maxWidth) {
                    lines.push(currentLine.trim());
                    currentLine = '';
                }
                currentLine += word + ' ';
            }
            lines.push(currentLine.trim());
            return lines.filter(line => line.length > 0);
        }
        
        const tooltipTitleCallback = (tooltipItems) => {
            const item = tooltipItems[0];
            let label = item.chart.data.labels[item.dataIndex];
            if (Array.isArray(label)) {
                return label.join(' ');
            }
            return label;
        };
        
        const sharedChartOptions = {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    labels: {
                        color: energeticPalette.gray,
                        font: {
                            family: "'Inter', sans-serif"
                        }
                    }
                },
                tooltip: {
                    callbacks: {
                        title: tooltipTitleCallback
                    }
                }
            },
            scales: {
                y: {
                    ticks: { color: energeticPalette.gray },
                    grid: { color: '#e5e7eb' }
                },
                x: {
                    ticks: { color: energeticPalette.gray },
                    grid: { display: false }
                }
            }
        };

        new Chart(document.getElementById('sizeComparisonChart'), {
            type: 'doughnut',
            data: {
                labels: ['PocketFlow (~56KB)', 'LangChain (166MB+)'],
                datasets: [{
                    label: 'Framework Size',
                    data: [56, 166000],
                    backgroundColor: [
                        energeticPalette.blue,
                        energeticPalette.pink
                    ],
                    borderColor: '#ffffff',
                    borderWidth: 4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { position: 'bottom', labels: { color: energeticPalette.gray, font: { family: "'Inter', sans-serif" }}},
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                let label = context.label || '';
                                if (label) {
                                    label += ': ';
                                }
                                if (context.parsed !== null) {
                                    label += new Intl.NumberFormat('en-US').format(context.parsed) + ' KB';
                                }
                                return label;
                            }
                        }
                    }
                }
            }
        });

        new Chart(document.getElementById('languagePopularityChart'), {
            type: 'bar',
            data: {
                labels: ['Python (Core)', 'TypeScript', 'Go', 'Rust'],
                datasets: [{
                    label: 'GitHub Stars',
                    data: [7300, 154, 39, 21],
                    backgroundColor: [
                        energeticPalette.blue,
                        energeticPalette.brightBlue,
                        energeticPalette.pink,
                        energeticPalette.yellow
                    ],
                    borderRadius: 4
                }]
            },
            options: { ...sharedChartOptions, plugins: { ...sharedChartOptions.plugins, legend: { display: false } } }
        });

        new Chart(document.getElementById('locComparisonChart'), {
            type: 'bar',
            data: {
                labels: ['PocketFlow', 'SmolAgent', 'CrewAI', 'LangChain'],
                datasets: [{
                    label: 'Approximate Lines of Code (Log Scale)',
                    data: [100, 8000, 18000, 405000],
                    backgroundColor: [
                        energeticPalette.blue,
                        energeticPalette.brightBlue,
                        energeticPalette.pink,
                        energeticPalette.yellow
                    ],
                    borderRadius: 4
                }]
            },
            options: {
                ...sharedChartOptions,
                indexAxis: 'y',
                scales: {
                    x: {
                        type: 'logarithmic',
                        ticks: {
                            color: energeticPalette.gray,
                            callback: function(value, index, values) {
                                return Number(value.toString()).toLocaleString();
                            }
                        },
                        grid: { color: '#e5e7eb' }
                    },
                    y: {
                        ticks: { color: energeticPalette.gray },
                        grid: { display: false }
                    }
                },
                plugins: {
                    ...sharedChartOptions.plugins,
                    legend: { display: false },
                    tooltip: {
                        callbacks: {
                            title: tooltipTitleCallback,
                            label: function(context) {
                                let label = context.dataset.label || '';
                                if (label) {
                                    label += ': ';
                                }
                                label += Number(context.parsed.x).toLocaleString() + ' Lines';
                                return label;
                            }
                        }
                    }
                }
            }
        });

        new Chart(document.getElementById('projectHealthChart'), {
            type: 'radar',
            data: {
                labels: [
                    wrapLabel('Development Velocity', 16), 
                    wrapLabel('Community Engagement', 16), 
                    wrapLabel('Creator Influence (Risk)', 16), 
                    wrapLabel('Built-in Observability', 16), 
                    wrapLabel('Educational Content', 16)
                ],
                datasets: [{
                    label: 'Project Health Score (Qualitative)',
                    data: [4, 4, 5, 1, 5],
                    fill: true,
                    backgroundColor: 'rgba(0, 71, 255, 0.2)',
                    borderColor: energeticPalette.blue,
                    pointBackgroundColor: energeticPalette.blue,
                    pointBorderColor: '#fff',
                    pointHoverBackgroundColor: '#fff',
                    pointHoverBorderColor: energeticPalette.blue
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { display: false },
                    tooltip: {
                        callbacks: {
                           title: tooltipTitleCallback
                        }
                    }
                },
                scales: {
                    r: {
                        angleLines: { color: '#e5e7eb' },
                        grid: { color: '#e5e7eb' },
                        pointLabels: { 
                            color: energeticPalette.gray,
                            font: {
                                size: 12,
                                family: "'Inter', sans-serif"
                            }
                        },
                        ticks: {
                            color: energeticPalette.gray,
                            backdropColor: 'rgba(255, 255, 255, 0.75)',
                            stepSize: 1,
                            max: 5,
                            min: 0
                        }
                    }
                }
            }
        });
    </script>
</body>
</html>
